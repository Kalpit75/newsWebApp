@page
@model NewsModel
@{
    ViewData["Title"] = "News Page";
}

<style>
    .news-list { list-style: none; padding: 0; }
    .news-item { margin-bottom: 2em; padding: 1em; border-bottom: 1px solid #e0e0e0; background: #fafbfc; border-radius: 6px; }
    .news-title { font-weight: bold; font-size: 1.15em; margin-bottom: 0.2em; }
    .news-title a { text-decoration: none; color: #1a0dab; }
    .news-title a:hover { text-decoration: underline; }
    .news-meta { color: #666; font-size: 0.95em; margin-bottom: 0.5em; display: block; }
    .news-summary { margin-top: 0.5em; font-size: 1em; color: #222; }
    .ai-summary { margin-top: 0.5em; font-size: 1em; color: #444; background: #f0f8ff; padding: 0.5em; border-radius: 4px; border-left: 3px solid #007acc; }
    .ai-summary-label { font-weight: bold; color: #007acc; font-size: 0.9em; margin-bottom: 0.3em; }
    .ai-summary-pending { margin-top: 0.5em; font-size: 0.9em; color: #666; background: #f5f5f5; padding: 0.5em; border-radius: 4px; border-left: 3px solid #ccc; }
    .news-content { margin-top: 0.5em; font-size: 0.98em; color: #444; }
    .load-more-container { text-align: center; margin: 2em 0; }
    .load-more-btn {
        background: #007acc;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 6px;
        cursor: pointer;
        font-size: 1em;
        transition: background-color 0.3s;
    }
    .load-more-btn:hover { background: #005a9e; }
    .load-more-btn:disabled {
        background: #ccc;
        cursor: not-allowed;
    }
    .loading { display: none; color: #666; }
    .category-filter { margin-bottom: 2em; padding: 1em; background: #f8f9fa; border-radius: 6px; }
</style>

<h2>Latest Cybersecurity News</h2>

<!-- Add Category Filter Section -->
<div class="category-filter">
    <form method="get" class="d-flex align-items-center gap-3">
        <label for="categorySelect" class="form-label mb-0 fw-bold">Filter by Category:</label>
        <select id="categorySelect" name="SelectedCategory" class="form-select" style="width: auto;" onchange="this.form.submit()">
            <option value="">All Categories</option>
            @foreach (var category in Model.Categories)
            {
                <option value="@category" selected="@(Model.SelectedCategory == category)">@category</option>
            }
        </select>
        @if (!string.IsNullOrEmpty(Model.SelectedCategory))
        {
            <a href="?" class="btn btn-outline-secondary btn-sm">Clear Filter</a>
        }
    </form>
</div>

<ul class="news-list" id="news-list">
    @await Html.PartialAsync("_NewsItemsPartial", Model.News)
</ul>

@if (Model.HasMoreNews)
{
    <div class="load-more-container">
        <button id="loadMoreBtn" class="load-more-btn" onclick="loadMore()">Load More</button>
        <div id="loading" class="loading">Loading...</div>
        <div id="noMoreNews" style="display: none; color: #666;">No more news to load</div>
    </div>
}

<form method="post" style="display: none;">
    @Html.AntiForgeryToken()
</form>

<script>
    let currentSkip = @Model.PageSize;
    const pageSize = @Model.PageSize;
    const selectedCategory = '@Model.SelectedCategory';

    async function loadMore() {
        const btn = document.getElementById('loadMoreBtn');
        const loading = document.getElementById('loading');
        const noMoreNews = document.getElementById('noMoreNews');

        btn.style.display = 'none';
        loading.style.display = 'block';

        try {
            const formData = new FormData();
            formData.append('Skip', currentSkip);
            formData.append('PageSize', pageSize);
            formData.append('SelectedCategory', selectedCategory); // Include category filter
            formData.append('__RequestVerificationToken', 
                document.querySelector('input[name="__RequestVerificationToken"]').value);

            const response = await fetch('', {
                method: 'POST',
                body: formData
            });

            if (response.ok) {
                const html = await response.text();
                
                if (html.trim()) {
                    document.getElementById('news-list').insertAdjacentHTML('beforeend', html);
                    currentSkip += pageSize;
                    
                    const newItems = (html.match(/<li class="news-item">/g) || []).length;
                    
                    if (newItems < pageSize) {
                        noMoreNews.style.display = 'block';
                    } else {
                        btn.style.display = 'block';
                    }
                } else {
                    noMoreNews.style.display = 'block';
                }
            } else {
                btn.textContent = 'Error loading more';
                btn.disabled = true;
            }
        } catch (e) {
            btn.textContent = 'Error loading more';
            btn.disabled = true;
        } finally {
            loading.style.display = 'none';
        }
    }
</script>